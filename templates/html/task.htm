{{define "tasks"}}<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@600&family=Ubuntu:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <title>etocursi</title>
    <link rel="stylesheet" href="/static/css/reset.css" />
    <link rel="stylesheet" href="/static/css/task.css" />
    <link rel="stylesheet" href="/static/css/message.css">
  </head>
  <body>
	<header>
	{{ if and (.error) (.task) }}
    {{ template "msg" .}}
    {{ end }}
      <div class="exit">
        <a href="/logout"><img src="/static/img/exit.svg" alt="exit"/></a>
      </div>
    </header>


{{if or (eq .task 1 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<div class="start">
	<h1 class="h1">Привет!</h1>
</div>

<div class="text">
	Добро пожаловать на курс по созданию веб-приложения для работы с базами данных.
</div>

<br>
<div class="start">
	<h1 class="h1">Что с этим делать?</h1>
</div>

<br>
<div class="start-btn">
	<a href="https://github.com/egorgasay2/DCandSITemplate"
              target="_blank"
              class="start-btn__link">Кликни и узнаешь</a>
</div>

<br>
<h2 class="h2">Задание 1 - Вывод всех таблиц базы данных</h2>
<div class="text">
	Реализовать скрипт, который открывает соединение с базой данных, собирает список всех таблиц, выводит их на экран.
</div>

<div class="text">
	Ответ прислать в виде ссылки на pull request в github. Для этого нужно сделать аккаунт на гитхабе и свой репозиторий на основе шаблона.
</div>

<div class="text important">
	Важно! Не мержите код в основную ветку до того как я приму код.
</div>

<div class="simple-text">
	<h1>Детали:</h1>
</div>
<div class="text">
	1.Использовать бд Postgres
</div>

<div class="text">
	2.Данные для авторизации скрипт должен брать из текстового файла
</div>

<div class="text">
	3.Путь до текстового файла должен должен передаваться с помощью параметров, т.е. запуск скрипта должен выглядеть след образом: pyhton3 main.py -p имя_файла.txt
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 2 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2 - Выполнение SQL запросов</h2>
<div class="text">
	Реализовать скрипт, который открывает соединение с базой данных,собирает список всех таблиц, выводит их на экран.
</div>

<div class="simple-text">
	user# pyhton3 main.py -p имя_файла.txt <br>
SQL >> SELECT * FROM students <br>
SQL >> WHERE id = 3;
</div>
<div class="text">
	Как только пользователь поставил ; последним символом запрос должен отправится в базу данных и напечатать ответ на экране:
</div>

<div class="simple-text">
	ID NAME TEXT
<br>
3   Egor  Hi
</div>
<div class="text">
	Так же, если при запуске приложения был передан флаг -a, то нужно вывести названия всех таблиц как вы реализовали это в прошлом задании.
</div>

<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="text">
	Начинает принимать запросы
</div>

<div class="simple-text">
	pyhton3 main.py -p имя_файла.txt
</div>
<div class="text">
	Выводит названия всех таблиц
</div>

<div class="simple-text">
	pyhton3 main.py -a -p имя_файла.txt
</div>
{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 3 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 3 - Вывод данных в виде таблицы</h2>
<div class="text">
	Необходимо сделать вывод таблиц из данных, которые присылает сервер БД.
</div>

<div class="text">
	Вот как это должно выглядеть: 
</div>

<div class="simple-text">
	<img src="./static/img/lesson3.png" alt="cod">
</div>
<div class="text important">
	Важно! После отправки SQL запроса и вывода результата программа не должна завершаться, а должна дальше принимать SQL запросы и выводить результат. Тесты для проверки корректного вывода таблиц писать не требуется
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 4 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 4 - Реализация подключения к (имя вендора вашей базы данных)</h2>
<div class="text">
	Необходимо реализовать подключение из скрипта к еще одной бд. Выбрать любую из: Microsoft SQL Server, MySQL.
</div>

<div class="text">
	Запуск скрипта теперь должен выглядеть так:
</div>

<div class="simple-text">
	$# python main.py -p имя_файла.txt -d имя_вендора_бд
</div>
<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="simple-text">
	$# python main.py -p conf.txt -d postgres
</div>
<div class="text important">
	Учесть тот факт, что пользователь может ввести путь до несуществующего 
файла и выдавать ему понятную ошибку.
</div>

<div class="simple-text">
	$# python main.py -p qfhjkqhnf.txt -d postgres
Файл не существует!
</div>
<div class="simple-text">
	$# python main.py -p config.txt -d qwdh <br>
Вендор в данный момент не поддерживается. <br>
Список доступных вендоров: [выводим список из доступных вендоров]
</div>
{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 5 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 5 - Выполнение запроса из файла</h2>
<div class="text">
	Необходимо реализовать возможность выполнения SQL запросов пользователя прямо из файла.
</div>

<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="simple-text">
	SQL >> EXEC FILE 'filename';<br>
*Вывод результата запроса пользователя.*
</div>
{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 6 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 6 - Система идентификации пользователей</h2>
<div class="text">
	Необходимо сделать систему идентификации пользователей. чтобы каждый раз не указывать данные для авторизации, а только при первом запуске скрипта.
</div>

<div class="simple-text">
	$# python main.py (Повторный запуск теперь должен выглядеть так)
</div>
<div class="text">
	При запуске скрипта должна появится надпись, которая предлагает восстановить прошлую сессию. 
</div>

<div class="text">
	Принимает только ответы Y\N , регистр неважен, при пустом вводе использовать значение Y. 
</div>

<div class="text">
	Если введенный текст не соответствует вышеперечисленным вариантам, то необходимо запросить ввод заново. 
</div>

<div class="text">
	Как это должно выглядеть (надпись делать не обязательно):
</div>

<div class="simple-text">
	<img src="./static/img/lesson6-1.png" alt="screen" class="ls6">
</div>
<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="simple-text">
	$# python main.py -p conf.txt -d postgres
</div>
<div class="text">
	Учесть тот факт, что пользователь может ввести путь до несуществующего файла и выдавать ему понятную ошибку.
</div>

<div class="simple-text">
	$# python main.py -p qfhjkqhnf.txt -d postgres <br>
Файл не существует!
</div>
<div class="simple-text">
	python main.py -p config.txt -d qwdh<br>
Вендор в данный момент не поддерживается. Список доступных вендоров: [выводим список из доступных вендоров]
</div>
<div class="text important">
	Далее должнен выводится список доступных баз данных, из которых пользователь сможет выбрать свою. Указывать бд через флаг больше не надо.
</div>

<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="text">
	Необходимо сделать систему идентификации пользователей. чтобы каждый раз не указывать данные для авторизации, а только при первом запуске скрипта.
</div>

<div class="simple-text">
	1. PostgreSQL <br>
2. MS SQL <br>
# 1 <br>
Шаблон строки подключения для PostgreSQL: <br>username:password@host:port/dbname<br>
# MyUser:111@127.0.0.1:5432/MyDB
</div>
<div class="text">
	Далее пользователь должен придумать логин и пароль
</div>

<div class="simple-text">
	Введите логин: MyUser <br>
Введите пароль: *****
</div>
<div class="text">
	Найдите способ заменить символы на звездочки при пользовательском вводе пароля.После этого нужно куда-то сохранить данные и использовать их при повторном входе от данного пользователя. Пока что можно использовать файл.
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 7 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 7 - Проектирование базы данных</h2>
<div class="text">
	Необходимо реализовать поддержку подключения к SQLite3, а так же начать сохранять в ней пользовательские данные. <br> Такие как: Username, Password, Connection String.
</div>

<div class="text important">
	Спроектируйте базу данных так, чтобы в дальнейшем у юзера могло быть несколько <br> баз данных.
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 8 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 8 - История запросов</h2>
<div class="text">
	В этом задании будет нужно реализовать сохранение всех запросов пользователя в базу данных, а так же возможность получение всех и повтор выполнения последнего запроса.
</div>

<div class="text important">
	Спроектируйте базу данных так, чтобы в дальнейшем у юзера могло быть несколько баз данных.
</div>

<br>
<div class="start">
	<h1 class="h1">Пример</h1>
</div>

<div class="text">
	Вывод всех запросов пользователя
</div>

<div class="simple-text">
	SQL >> HISTORY;
</div>
<div class="text">
	Повторное выполнение последнего запроса
</div>

<div class="simple-text">
	SQL >> REPEAT LAST;
</div>
{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 9 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 9 Тесты</h2>
<div class="text">
	Добейтесь покрытия тестами 50%+
</div>

<div class="text important">
	Не забывайте дописывать тесты на последующий важный функционал!
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 10 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<div class="start">
	<h1 class="h1">Модуль 2</h1>
</div>

<h2 class="h2">Задание 2.1 Переезд в веб приложение!</h2>
<div class="text">
	Добавьте в свое приложение веб-вреймворк, чтобы с базами данных можно было работать из браузера.
</div>

<br>
<h3 style="font-size:32px">Необходимо перенести следующий функционал:</h3>
<br>
<div class="text">
	Вывод таблицы по результатам запроса, если результат не таблица - вывести ошибку или сообщение об успешном выполнении
</div>

<div class="text">
	Страничка с всеми таблицами, при нажатии на имя которых они выводятся полностью
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 11 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2.2 История</h2>
<div class="text">
	Сделайте страницу с историей запросов. В дополнении должна указываться дата, статус (выполняется, успех, ошибка (текст ошибки если она есть)).
</div>

<div class="text">
	Добавьте подсветку синтаксиса во всей вкладке история.
</div>

<div class="text important">
	Задание со * - добавьте подсветку синтаксиса при наборе запроса
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 12 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2.3 Профиль пользователя</h2>
<div class="text">
	Сделайте страницу пользователя. 
</div>

<br>
<h3 style="font-size:32px">Должно отображаться:</h3>
<div class="text">
	Статистика запросов (Общее количество, количество удачных, процент удачных)
</div>

<div class="text">
	Возможность сменить пароль
</div>

<div class="text">
	Возможность установить псевдоним
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 13 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2.4 Аккаунты</h2>
<h3 style="font-size:32px">Реализуйте:</h3>
<div class="text">
	Вход в аккаунт
</div>

<div class="text">
	Выход из аккаунта
</div>

<div class="text">
	Регистрация аккаунта
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 14 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2.5 Несколько баз данных</h2>
<div class="text">
	Сделайте возможность добавления пользователем нескольких баз данных и возможность переключения между ними. 
</div>

<div class="text">
	Подключение стоит переиспользовать.
</div>

<div class="text">
	Сделать кнопку обновления подключения
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}

{{if or (eq .task 14 ) (not .task)}}
	<section class="lesson">
		<div class="container">

<h2 class="h2">Задание 2.6 Создание базы данных</h2>
<div class="text">
	Реализуйте возможность создания базы данных прямо из веб интерфейса. 
</div>

<div class="text">
	Для PostgreSQL, MySQL - докер, Sqlite3 - прямо на хостовой машине.
</div>

{{ if and .task (not .IsPending) }}
    <br>
      <form method="post">
        <center>
        <input name="pullURL" class="input" placeholder="Ссылка на решение" required>
      <button type="submit" class="btn">Отправить решение</button>
      </center>
      </form>
      {{end}}
    {{ if .IsPending}}
    <br>
    <center>
      <p>Ментор еще не проверил вашу работу!</p>
    </center>
    {{ end }}
	</div>
</section>
{{ end }}


    <script src="/static/js/message.js"></script>
  </body>
</html>
{{end}}{{template "tasks" .}}